services:
  api:
    build:
      context: .
      dockerfile: StatsHub_Api/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=StatsHub;Username=postgres;Password=postgres
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - stats_hub_network

  web:
    build:
      context: .
      dockerfile: StatsHub_Web/Dockerfile
    ports:
      - "8081:8081"
    environment:
      - ASPNETCORE_URLS=http://+:8081
      - ASPNETCORE_ENVIRONMENT=Development
      - ApiUrl=http://localhost:8080
    networks:
      - stats_hub_network

  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=StatsHub
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - stats_hub_network

networks:
  stats_hub_network:
    driver: bridge

volumes:
  postgres-data: